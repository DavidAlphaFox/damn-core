
; widgets / icons ? (see WoW )
; * HP color based on ratio like hp bar samey (take same color definitions etc.)
; * mana color same in the whole app
; * red positive/green negative
; * readable-number on ->effective-value but doesn't work on val-max ->pretty-value fn ?

; :base/stat-effect ?? why not recursively?
; also stats why not modifiers has its own ?
; effect/projectile ...

; TODO then color as of component make ....
; default (name k?)

; TODO use also @ properties => text

; TODO use at \n split everywhere (entity info widget not using this)
; grep info-text or split \ntoo
; (damage ... move to dmg, modifiers?)

; colors ... widgets ...

; TODO 8 source modifiers not showing (effects)
; TODO entity.effect no color set.... ?

#_(extend-type core.context.Context
  core.context/TooltipText
  (tooltip-text [ctx property]
    (components/info-text property ctx))


 ; player just give unique uid no need to make anu drama assoc ctx?
  (player-tooltip-text [ctx property]
    (when (ctx/player-entity ctx)
      (ctx/tooltip-text
       ; player has item @ start
       ; =>
       ; context.world/transact-create-entities-from-tiledmap
       ; =>
       ; :tx/set-item-image-in-widget
       ; =>
       ; FIXME the bug .... player-entity has not been set yet inside context/game ....
       ; same problem w. actionbar or wherever player-entity is used
       ; => avoid player-entity* at initialisation
       ; assert also earlier
       ; pass player0entity itself to actionbar/inventory ....
       ; skill window is same problem ...... if we create it @ start
       ; there will be no player
       ; or we create the tooltips on demand
       ctx ;(assoc ctx :effect/source (:entity/id (ctx/player-entity* ctx))) ; TODO !!
       property))))
; generic property->body or property->entity (skill,item,world..?)
; pass body & entity components
; 0.5 & z-order is in ptoperties then
; but they share same body / z-order ? DRY information?
; => just a separate property item-body?

; or properties create themself into the ecs
; deserialized
; ?

; (components/info-text (select-keys entity* info-text-key-order)
; => the entity needs a type or property/type
; and there is defined the :info-text-key-order
; which we fetch
; anyway properties need property/type
; and properties just entities
; so
;(defcomponent :entity.type/body {:info-text-key-order})

; TODO this whole thing can be removed ??
; at least has nothing to do with context.properties anymore...
; entity/info-text? entity = bag of components ?
; core.entity is acatually core.body ?

; also properties == entities with uid property/id ?
; get-entity not get-property ?
; property -> create entity function generic make?
; no need to image->edn then ?


  not working anymore source for info-text:
#_(defcomponent :skill/effects {:data [:components-ns :effect]}
  #_(component/info-text [[_ v] ctx]
    ; don't used player-entity* as it may be nil when just created, could use the current property creature @ editor
    (str "[CHARTREUSE]"
         (components/info-text v (assoc ctx :effect/source (ctx/player-entity ctx)))
         "[]")))

; effect-ctx safe-merge into effect value !
; can let
; no merge ctx
; ?

; * sounds move into action .... grep tx/sound anyway remv
; => but what abt. target-entity? (in case of hit ground there's something already?)
; should be the 'abort' case??? and not
; & damage already has its own sound/audiovisual ?
; => each group of 'effects' has its sound ? e.g. damage grouped with 3 other things, make its own sound

; * get clear creature components/stats which required (hp for princess ... because potential field etc.)
; and flatten _


; can attack own faction w. melee ..

; (component/schema :skill/effects)
; TODO how on restarts clear out core.component/attributes & defsystems  & reload _ALL_ affecet ns's defcomponents ??

; => its part of context then ?

; al data needs also to supply default value
; e.g. DRY
; convert nil cannot set it

; Bow shouldn't have player modified stuff...

; Window doesn't icnrease size on change (add components)
; anyway full size?
; also use tree? its messy ....
; => needs to be nice...

; maxrange needs to be connected w. los - max player range / creatures
; etc.
; and optional

; TODO effect/projectile
; needs direction & source & targeT?!
; its what effect-target type usable?
; player usable in just direction, NPC's use it w. target-entity to check if possible ....

; or just keep  effect - projectile fits there
; but other ones cannot use directly -
; - entity-effect -  ?

; TODO tx.ui / tx.create / tx.entity
; or with effect
; but tx. shorter

; but doesn't work with effect/hp => stats/hp
; or always effect.entity/_stat_
; autocreate

; :entity.effect/faction
; :effect.entity/faction ?
;
; :entity-effect/damage
; :hit-effect/damage
; :tx.entity/damage
; :tx.e/damage
; ?

; * convert
; * ::stat-effect
; * melee-damage
; * damage
; * stun/kill (use all events, add even 'interrupt' or destroy' ?

; => SO ITS ABOUT definint hit-effects (also use @ projectile hit-effects)
; or entity-effects???
; there are more ... also add-skill/etc.?
; see defcomponents do! ...


; TODO effect-target/position => {:effect/spawn :creatures/skeleton-warrior}
; don't pass anymore effect/source & effect/target etc.
; =. effect-target/position or direction?? {:effect/projectile :projectiles/black}
; (more complicated ...)

; TODO probably action/sound and not sound at low lvl places ... ?

; TODO can I move other skill related stuff over here? grep key usage ???



Could even use a state machine for connecting screens
instead of checking key pressed its like events
and visualize it from the code ...


Make entities as outer-radius-circle or ellipses
but same as mouseover-entity-shown should be the collision
or show rect for now

=> but can items be placed on water??
or on walls???
-> unclarity with collides?/valid-position/z-order/etc.

* item in hand is drawn at 48x48 and in inventory cells at different size (suddenly smaller )
; but needs to be smaller because of dropping
or make dropping itself simpler

* If player colliding with a cell, highlight the cell for a second in red/orange
