* pull out components.properties.types & each define defcomponents? and also top-level defcomponents?
* also defstats itself -> effects & operations should be deducted from :schema
=> this is useless because I dont have an app.edn editor
=> also now properties defined in 2 places
=> revert commit

'separate how from what'

; * (m/form entity/movement-speed-schema) (use identity , default ->data )
; * target-all/target-entity not an effect || each skill/effect requires only a target
;    (one of multiple choices) like in map generators


Also big questions:
; * which data is there? (for properties - or in general) (mostly for creatures, projectiles, effets )
; * do they all have proper widget/schema/optional? - optional? belongs in the map definition not attribute ?
; => optional? also default value choose not optional?!
; * define not at entity/foo but at components/properties ? (creature state different than entity/state ..)

; TODO be clear (just use namespaced keywords for all these things ...)
; * my core-schema mostly == malli schema, adjust malli registry/etc. for components/image/sound/...
;   and just use functions to get e.g. items out of enum
; https://github.com/metosin/malli?tab=readme-ov-file#qualified-keys-in-a-map
